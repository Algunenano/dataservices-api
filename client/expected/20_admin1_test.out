-- Add to the search path the schema
SET search_path TO public,cartodb,cdb_geocoder_client;
-- Mock the server functions
CREATE OR REPLACE FUNCTION cdb_geocoder_server.cdb_geocode_admin1_polygon(username text, admin1_name text)
RETURNS Geometry AS $$
BEGIN
  RAISE NOTICE 'cdb_geocoder_server.cdb_geocode_admin1_polygon invoked with params (%, %)', username, admin1_name;
  RETURN NULL;
END;
$$ LANGUAGE 'plpgsql';
CREATE OR REPLACE FUNCTION cdb_geocoder_server.cdb_geocode_admin1_polygon(username text, admin1_name text, country_name text)
RETURNS Geometry AS $$
BEGIN
  RAISE NOTICE 'cdb_geocoder_server.cdb_geocode_admin1_polygon invoked with params (%, %, %)', username, admin1_name, country_name;
  RETURN NULL;
END;
$$ LANGUAGE 'plpgsql';
-- Exercise the public and the proxied function
SELECT cdb_geocode_admin1_polygon('California');
NOTICE:  cdb_geocoder_client._cdb_geocode_admin1_polygon(2): [contrib_regression] REMOTE NOTICE: cdb_geocoder_server.cdb_geocode_admin1_polygon invoked with params ("test_user", California)
CONTEXT:  SQL statement "SELECT cdb_geocoder_client._cdb_geocode_admin1_polygon(username, admin1_name)"
PL/pgSQL function cdb_geocode_admin1_polygon(text) line 10 at SQL statement
 cdb_geocode_admin1_polygon 
----------------------------
 
(1 row)

SELECT cdb_geocode_admin1_polygon('California', 'United States');
NOTICE:  cdb_geocoder_client._cdb_geocode_admin1_polygon(3): [contrib_regression] REMOTE NOTICE: cdb_geocoder_server.cdb_geocode_admin1_polygon invoked with params ("test_user", California, United States)
CONTEXT:  SQL statement "SELECT cdb_geocoder_client._cdb_geocode_admin1_polygon(username, admin1_name, country_name)"
PL/pgSQL function cdb_geocode_admin1_polygon(text,text) line 10 at SQL statement
 cdb_geocode_admin1_polygon 
----------------------------
 
(1 row)

