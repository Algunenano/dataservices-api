--
-- Exception-safe public DataServices API function
--

CREATE OR REPLACE FUNCTION <%= DATASERVICES_CLIENT_SCHEMA %>.<%= name %>_exception_safe (<%= params_with_type_and_default.join(' ,') %>)
RETURNS <%= return_type %> AS $$
DECLARE
  <% if not multi_row %>ret <%= return_type %>;<% end %>
  username text;
  orgname text;
BEGIN
  IF session_user = 'publicuser' OR session_user ~ 'cartodb_publicuser_*' THEN
    RAISE EXCEPTION 'The api_key must be provided';
  END IF;
  SELECT u, o INTO username, orgname FROM <%= DATASERVICES_CLIENT_SCHEMA %>._cdb_entity_config() AS (u text, o text);
  -- JSON value stored "" is taken as literal
  IF username IS NULL OR username = '' OR username = '""' THEN
    RAISE EXCEPTION 'Username is a mandatory argument, check it out';
  END IF;

  <% if multi_row %>
    BEGIN
      RETURN QUERY
      SELECT * FROM <%= DATASERVICES_CLIENT_SCHEMA %>._<%= name %>(<%= ['username', 'orgname'].concat(params).join(', ') %>);
    EXCEPTION
      WHEN OTHERS THEN
        RAISE WARNING 'whatever';
    END;
  <% elsif multi_field %>
    BEGIN
      SELECT * FROM <%= DATASERVICES_CLIENT_SCHEMA %>._<%= name %>(<%= ['username', 'orgname'].concat(params).join(', ') %>) INTO ret;
      RETURN ret;
    EXCEPTION
      WHEN OTHERS THEN
        RAISE WARNING 'whatever';
        RETURN ret;
    END;
  <% else %>
    BEGIN
      SELECT <%= DATASERVICES_CLIENT_SCHEMA %>._<%= name %>(<%= ['username', 'orgname'].concat(params).join(', ') %>) INTO ret;
      RETURN ret;
    EXCEPTION
      WHEN OTHERS THEN
        RAISE WARNING 'whatever';
        RETURN ret;
    END;
  <% end %>
END;
$$ LANGUAGE 'plpgsql' SECURITY DEFINER;
